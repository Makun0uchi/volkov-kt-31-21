// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VolkoVladislavKT_31_21.Database;

#nullable disable

namespace VolkoVladislavKT_31_21.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20241107115254_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("grade_id")
                        .HasComment("Идентификатор оценки");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GradeId"));

                    b.Property<int>("GradeValue")
                        .HasColumnType("int4")
                        .HasColumnName("grade_value")
                        .HasComment("Оценка");

                    b.Property<int>("StudentId")
                        .HasColumnType("int4")
                        .HasColumnName("f_student_id")
                        .HasComment("Связанный студент");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int4")
                        .HasColumnName("f_subject_id")
                        .HasComment("Связанная дисциплина");

                    b.HasKey("GradeId")
                        .HasName("pk_cd_grades_grade_id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("cd_grades", (string)null);

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            GradeValue = 85,
                            StudentId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            GradeId = 2,
                            GradeValue = 90,
                            StudentId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            GradeId = 3,
                            GradeValue = 78,
                            StudentId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            GradeId = 4,
                            GradeValue = 92,
                            StudentId = 4,
                            SubjectId = 3
                        },
                        new
                        {
                            GradeId = 5,
                            GradeValue = 67,
                            StudentId = 5,
                            SubjectId = 4
                        },
                        new
                        {
                            GradeId = 6,
                            GradeValue = 88,
                            StudentId = 6,
                            SubjectId = 5
                        },
                        new
                        {
                            GradeId = 7,
                            GradeValue = 73,
                            StudentId = 7,
                            SubjectId = 6
                        },
                        new
                        {
                            GradeId = 8,
                            GradeValue = 81,
                            StudentId = 8,
                            SubjectId = 7
                        },
                        new
                        {
                            GradeId = 9,
                            GradeValue = 76,
                            StudentId = 9,
                            SubjectId = 8
                        },
                        new
                        {
                            GradeId = 10,
                            GradeValue = 89,
                            StudentId = 10,
                            SubjectId = 9
                        });
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("group_id")
                        .HasComment("Идентификатор группы");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("с_group_name")
                        .HasComment("Именование группы");

                    b.HasKey("GroupId")
                        .HasName("pk_cd_group_group_id");

                    b.ToTable("cd_group", (string)null);

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            GroupName = "Group A"
                        },
                        new
                        {
                            GroupId = 2,
                            GroupName = "Group B"
                        },
                        new
                        {
                            GroupId = 3,
                            GroupName = "Group C"
                        },
                        new
                        {
                            GroupId = 4,
                            GroupName = "Group D"
                        },
                        new
                        {
                            GroupId = 5,
                            GroupName = "Group E"
                        },
                        new
                        {
                            GroupId = 6,
                            GroupName = "Group F"
                        },
                        new
                        {
                            GroupId = 7,
                            GroupName = "Group G"
                        },
                        new
                        {
                            GroupId = 8,
                            GroupName = "Group H"
                        },
                        new
                        {
                            GroupId = 9,
                            GroupName = "Group I"
                        },
                        new
                        {
                            GroupId = 10,
                            GroupName = "Group J"
                        });
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("student_id")
                        .HasComment("Идентификатор студента");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("с_student_first_name")
                        .HasComment("Имя студента");

                    b.Property<int>("GroupId")
                        .HasColumnType("int4")
                        .HasColumnName("f_students_group_id")
                        .HasComment("Идентификатор связанной группы");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("с_student_last_name")
                        .HasComment("Фамилия студента");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("с_student_middle_name")
                        .HasComment("Отчество студента");

                    b.HasKey("StudentId")
                        .HasName("pk_cd_student_student_id");

                    b.HasIndex(new[] { "GroupId" }, "idx_cd_student_fk_f_group_id");

                    b.ToTable("cd_student", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            FirstName = "Alice",
                            GroupId = 1,
                            LastName = "Johnson",
                            MiddleName = "M"
                        },
                        new
                        {
                            StudentId = 2,
                            FirstName = "Bob",
                            GroupId = 2,
                            LastName = "Smith",
                            MiddleName = "A"
                        },
                        new
                        {
                            StudentId = 3,
                            FirstName = "Charlie",
                            GroupId = 1,
                            LastName = "Brown",
                            MiddleName = "B"
                        },
                        new
                        {
                            StudentId = 4,
                            FirstName = "David",
                            GroupId = 3,
                            LastName = "Wilson",
                            MiddleName = "C"
                        },
                        new
                        {
                            StudentId = 5,
                            FirstName = "Eve",
                            GroupId = 2,
                            LastName = "Davis",
                            MiddleName = "D"
                        },
                        new
                        {
                            StudentId = 6,
                            FirstName = "Frank",
                            GroupId = 3,
                            LastName = "Taylor",
                            MiddleName = "E"
                        },
                        new
                        {
                            StudentId = 7,
                            FirstName = "Grace",
                            GroupId = 4,
                            LastName = "Evans",
                            MiddleName = "F"
                        },
                        new
                        {
                            StudentId = 8,
                            FirstName = "Hank",
                            GroupId = 5,
                            LastName = "Moore",
                            MiddleName = "G"
                        },
                        new
                        {
                            StudentId = 9,
                            FirstName = "Ivy",
                            GroupId = 4,
                            LastName = "Martin",
                            MiddleName = "H"
                        },
                        new
                        {
                            StudentId = 10,
                            FirstName = "Jake",
                            GroupId = 5,
                            LastName = "White",
                            MiddleName = "I"
                        });
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("subject_id")
                        .HasComment("Идентификатор дисциплины");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("с_subject_name")
                        .HasComment("Именование дисциплины");

                    b.Property<string>("SubjectType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("с_subject_type")
                        .HasComment("Направление дисциплины");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bool")
                        .HasColumnName("b_deleted")
                        .HasComment("Мягкое удаление");

                    b.HasKey("SubjectId")
                        .HasName("pk_cd_subject_subject_id");

                    b.ToTable("cd_subject", (string)null);

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            SubjectName = "Mathematics",
                            SubjectType = "TechnicalSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 2,
                            SubjectName = "Physics",
                            SubjectType = "TechnicalSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 3,
                            SubjectName = "History",
                            SubjectType = "HumanisticSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 4,
                            SubjectName = "Biology",
                            SubjectType = "TechnicalSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 5,
                            SubjectName = "Philosophy",
                            SubjectType = "HumanisticSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 6,
                            SubjectName = "Chemistry",
                            SubjectType = "TechnicalSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 7,
                            SubjectName = "Sociology",
                            SubjectType = "HumanisticSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 8,
                            SubjectName = "Literature",
                            SubjectType = "HumanisticSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 9,
                            SubjectName = "Computer Science",
                            SubjectType = "TechnicalSubject",
                            isDeleted = false
                        },
                        new
                        {
                            SubjectId = 10,
                            SubjectName = "Geography",
                            SubjectType = "HumanisticSubject",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("test_id")
                        .HasComment("Идентификатор зачета");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestId"));

                    b.Property<int>("StudentId")
                        .HasColumnType("int4")
                        .HasColumnName("f_student_id")
                        .HasComment("Связанный студент");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int4")
                        .HasColumnName("f_subject_id")
                        .HasComment("Связанная дисциплина");

                    b.Property<bool>("isPassed")
                        .HasColumnType("bool")
                        .HasColumnName("b_passed")
                        .HasComment("Результат");

                    b.HasKey("TestId")
                        .HasName("pk_cd_tests_test_id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("cd_tests", (string)null);

                    b.HasData(
                        new
                        {
                            TestId = 1,
                            StudentId = 1,
                            SubjectId = 1,
                            isPassed = true
                        },
                        new
                        {
                            TestId = 2,
                            StudentId = 2,
                            SubjectId = 1,
                            isPassed = false
                        },
                        new
                        {
                            TestId = 3,
                            StudentId = 3,
                            SubjectId = 2,
                            isPassed = true
                        },
                        new
                        {
                            TestId = 4,
                            StudentId = 4,
                            SubjectId = 3,
                            isPassed = false
                        },
                        new
                        {
                            TestId = 5,
                            StudentId = 5,
                            SubjectId = 4,
                            isPassed = true
                        },
                        new
                        {
                            TestId = 6,
                            StudentId = 6,
                            SubjectId = 5,
                            isPassed = false
                        },
                        new
                        {
                            TestId = 7,
                            StudentId = 7,
                            SubjectId = 6,
                            isPassed = true
                        },
                        new
                        {
                            TestId = 8,
                            StudentId = 8,
                            SubjectId = 7,
                            isPassed = false
                        },
                        new
                        {
                            TestId = 9,
                            StudentId = 9,
                            SubjectId = 8,
                            isPassed = true
                        },
                        new
                        {
                            TestId = 10,
                            StudentId = 10,
                            SubjectId = 9,
                            isPassed = true
                        });
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Grade", b =>
                {
                    b.HasOne("VolkoVladislavKT_31_21.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_grades_student_id");

                    b.HasOne("VolkoVladislavKT_31_21.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_grades_subject_id");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Student", b =>
                {
                    b.HasOne("VolkoVladislavKT_31_21.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_student_group_id");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Test", b =>
                {
                    b.HasOne("VolkoVladislavKT_31_21.Models.Student", "Student")
                        .WithMany("Tests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_tests_student_id");

                    b.HasOne("VolkoVladislavKT_31_21.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_tests_subject_id");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("VolkoVladislavKT_31_21.Models.Student", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
